{{ comp.oi.linechart() | safe }}

<div id="all-chart-audience" class="social-chart"></div>
<div id="all-chart-engagement" class="social-chart"></div>
<div id="all-chart-impressions" class="social-chart"></div>

<div id="twitter-chart-audience" class="social-chart"></div>
<div id="twitter-chart-engagement" class="social-chart"></div>
<div id="twitter-chart-impressions" class="social-chart"></div>

<div id="instagram-chart-audience" class="social-chart"></div>
<div id="instagram-chart-engagement" class="social-chart"></div>
<div id="instagram-chart-impressions" class="social-chart"></div>

<div id="facebook-chart-audience" class="social-chart"></div>
<div id="facebook-chart-engagement" class="social-chart"></div>
<div id="facebook-chart-impressions" class="social-chart"></div>

<div id="linkedin-chart-audience" class="social-chart"></div>
<div id="linkedin-chart-engagement" class="social-chart"></div>
<div id="linkedin-chart-impressions" class="social-chart"></div>


<style>
  .social-chart {
    height: 30rem;
    margin-left: auto;
    margin-right: auto;
  }
  .key rect {
    stroke: none;
  }


</style>
<script>
  function fillGraphs(paramsList){
    for(const params of paramsList)
      fillGraph(params);
  }
  function fillGraph(params){
    rawData = JSON.parse(params.file);
    
    if(params.filter_date != null){
      rawData = rawData.filter(function (i,n){
          return i.week_starting >= params.filter_date[0] && i.week_starting <= params.filter_date[1];
      });
    }

    //const dateFormatter = (date) => date.toLocaleString('default', { day: 'numeric', month: 'short' });
    //const dateFormatter = (date) => "";
    const dateFormatter = (date) => date.getDate() <= 7 ? date.toLocaleString('default', { month: 'short' }) : "";
    const data = {
      week: rawData.map(x => new Date(x.week_starting)),
      values: rawData.map(x => x[params.metric]),
      axis: {
        yMax: Math.max(...rawData.map(x => x[params.metric]))
      }
    };
    
    // Work out maximum y value and labels
    const yMax = Math.ceil(Math.max(...data.values)/params.gap) * params.gap;
    const yLabels = {};
    for (let l = 0; l <= yMax; l+=params.gap) yLabels[l] = { label: l};

    const labels = data.week.reduce((a, c, n) => ({ ...a, [n]: { label: dateFormatter(c) } }), {})
    const values = data.values.map((v, n) => ({ x: n, y: parseInt(v, 10) }));
    chart = OI.linechart(document.getElementById(params.domID), {
      left: 80,
      right: 30,
      top: 30,
      bottom: 60,
      // Draw a key
      key: { show: true, position: 'top left' },
      // Define the axes
      'axis': {
        'x': {
          'line': { 'show': true },
          'title': { 'label': 'Week starting (Monday)', 'anchor': 'middle' },
          'labels': labels,
        },
        'y': {
          'line': { show: true },
          'grid': { 'show': false, 'stroke-width': '0.5px' },
          'title': { 'label': params.yTitile },
          'max': yMax,
          'labels': yLabels,
        }
      }
    });
    chart.addSeries(values, {
      'title': params.chartTitle,
      'points': { 'size': 6, 'color': params.colour },
      'line': { 'color': params.colour },
      // 'tooltip': { 'label': 'Cumulative values' }
    });
    chart.draw();
  

  }
  document.addEventListener('DOMContentLoaded', function () {
    paramsTwitter = {
              file: `{{ metrics.social_media.service.twitter_weekly.rows | dump | safe }}`,
              domID: "twitter-chart-audience",
              colour: "#1DA1F2",
              metric: "audience_last",
              gap: 2000,
              yTitile: "Audience",
              chartTitle: "Twitter Audience",
              filter_date: ["2022-03-01","2022-08-30"]
            };

    paramsInstagram = {
              file: `{{ metrics.social_media.service.instagram_weekly.rows | dump | safe }}`,
              domID: "instagram-chart-audience",
              colour: "#833AB4",
              metric: "audience_last",
              gap: 500,
              yTitile: "Audience",
              chartTitle: "Instagram Audience",
              filter_date: ["2022-03-01","2022-08-31"]
            };

    paramsFacebook = {
              file: `{{ metrics.social_media.service.facebook_weekly.rows | dump | safe }}`,
              domID: "facebook-chart-audience",
              colour: "#4267B2",
              metric: "audience_last",
              gap: 200,
              yTitile: "Audience",
              chartTitle: "Facebook Audience",
              filter_date: ["2022-03-01","2022-08-31"]
            };

    paramsLinkedin = {
              file: `{{ metrics.social_media.service.linkedin_weekly.rows | dump | safe }}`,
              domID: "linkedin-chart-audience",
              colour: "#0A66C2",
              metric: "audience_last",
              gap: 500,
              yTitile: "Audience",
              chartTitle: "Linkedin Audience",
              filter_date: ["2022-03-01","2022-08-31"]
            };

    paramsAll = {
              file: `{{ metrics.social_media.all_weekly.rows | dump | safe }}`,
              domID: "all-chart-audience",
              colour: "#000000",
              metric: "audience_last",
              gap: 2000,
              yTitile: "Audience",
              chartTitle: "Total Audience",
              filter_date: ["2022-03-01","2022-08-31"]
            };

    paramsTwitterE = {
              file: `{{ metrics.social_media.service.twitter_weekly.rows | dump | safe }}`,
              domID: "twitter-chart-engagement",
              colour: "#1DA1F2",
              metric: "engagements_total",
              gap: 1000,
              yTitile: "Engagement",
              chartTitle: "Twitter Engagement"
            };

    paramsInstagramE = {
              file: `{{ metrics.social_media.service.instagram_weekly.rows | dump | safe }}`,
              domID: "instagram-chart-engagement",
              colour: "#833AB4",
              metric: "engagements_total",
              gap: 100,
              yTitile: "Engagement",
              chartTitle: "Instagram Engagement"
            };

    paramsFacebookE = {
              file: `{{ metrics.social_media.service.facebook_weekly.rows | dump | safe }}`,
              domID: "facebook-chart-engagement",
              colour: "#4267B2",
              metric: "engagements_total",
              gap: 500,
              yTitile: "Engagement",
              chartTitle: "Facebook Engagement"
            };

    paramsLinkedinE = {
              file: `{{ metrics.social_media.service.linkedin_weekly.rows | dump | safe }}`,
              domID: "linkedin-chart-engagement",
              colour: "#0A66C2",
              metric: "engagements_total",
              gap: 100,
              yTitile: "Engagement",
              chartTitle: "Linkedin Engagement"
            };

    paramsAllE = {
          file: `{{ metrics.social_media.all_weekly.rows | dump | safe }}`,
          domID: "all-chart-engagement",
          colour: "#000000",
          metric: "engagements_total",
          gap: 2000,
          yTitile: "Engagement",
          chartTitle: "Total Engagement"
        };

    paramsTwitterI = {
              file: `{{ metrics.social_media.service.twitter_weekly.rows | dump | safe }}`,
              domID: "twitter-chart-impressions",
              colour: "#1DA1F2",
              metric: "impressions_total",
              gap: 25000,
              yTitile: "Impressions",
              chartTitle: "Twitter Impressions"
            };

    paramsInstagramI = {
              file: `{{ metrics.social_media.service.instagram_weekly.rows | dump | safe }}`,
              domID: "instagram-chart-impressions",
              colour: "#833AB4",
              metric: "impressions_total",
              gap: 10000,
              yTitile: "Impressions",
              chartTitle: "Instagram impressions"
            };

    paramsFacebookI = {
              file: `{{ metrics.social_media.service.facebook_weekly.rows | dump | safe }}`,
              domID: "facebook-chart-impressions",
              colour: "#4267B2",
              metric: "impressions_total",
              gap: 10000,
              yTitile: "Impressions",
              chartTitle: "Facebook Impressions"
            };

    paramsLinkedinI = {
              file: `{{ metrics.social_media.service.linkedin_weekly.rows | dump | safe }}`,
              domID: "linkedin-chart-impressions",
              colour: "#0A66C2",
              metric: "impressions_total",
              gap: 10000,
              yTitile: "Impressions",
              chartTitle: "Linkedin Impressions"
            };

    paramsAllI = {
          file: `{{ metrics.social_media.all_weekly.rows | dump | safe }}`,
          domID: "all-chart-impressions",
          colour: "#000000",
          metric: "impressions_total",
          gap: 30000,
          yTitile: "Impressions",
          chartTitle: "Total Impressions"
        };


    fillGraph(paramsTwitter);
    fillGraph(paramsInstagram);
    fillGraph(paramsFacebook);
    fillGraph(paramsLinkedin);
    fillGraph(paramsAll);
    fillGraph(paramsTwitterE);
    fillGraph(paramsInstagramE);
    fillGraph(paramsFacebookE);
    fillGraph(paramsLinkedinE);
    fillGraph(paramsAllE);
    fillGraph(paramsTwitterI);
    fillGraph(paramsInstagramI);
    fillGraph(paramsFacebookI);
    fillGraph(paramsLinkedinI);
    fillGraph(paramsAllI);

  });
</script>


